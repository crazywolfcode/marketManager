<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:myui="clr-namespace:MyCustomControlLibrary;assembly=MyCustomControlLibrary"
                    xmlns:local="clr-namespace:MarketManage">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MarketManage;component/Lang/DefaultLanguage.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/MarketManage;component/Style/ValueDictionary.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/MarketManage;component/Style/IconButtonStyleDictionary.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/MarketManage;component/Style/ScrollViewerDictionary.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/MarketManage;component/Style/MenuAndTreeViewDictionary.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/MarketManage;component/Style/WindowStyleDictionary.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/MarketManage;component/Style/TabButtonStyle.xaml"></ResourceDictionary>
       
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="BaseDataExpenderControlTemplate" TargetType="Expander">
        <Border x:Name="ExpanderBorder" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    SnapsToDevicePixels="True">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                            DockPanel.Dock="Top"
                            Content="{TemplateBinding HeaderedContentControl.Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontSize="{TemplateBinding FontSize}"
                            FontFamily="{TemplateBinding FontFamily}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Padding="{TemplateBinding Padding}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  Height="{Binding Path=Height,ElementName=HeaderSite}">
                                <myui:IconTextBlock x:Name="button"  Text="&#xe602;" FontSize="14"/>
                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True"  />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Text" Value="&#xe502;" TargetName="button"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <ContentPresenter x:Name="ExpandSite" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                      DockPanel.Dock="Bottom" Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      Margin="{TemplateBinding Padding}" 
                                      Visibility="Collapsed" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Setter Property="Background" Value="#3ca9fe" TargetName="ExpanderBorder"/>
                <Setter Property="Foreground" Value="white"/>
                <Setter Property="Foreground" Value="white" TargetName="HeaderSite"/>
            </Trigger>
            <Trigger Property="IsExpanded" Value="false">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="HeaderSite"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseDataExpenderStyle" TargetType="Expander">
        <Setter Property="Background" Value="{DynamicResource F9}"/>
        <Setter Property="Foreground" Value="#696969"/>
        <Setter Property="Template" Value="{StaticResource BaseDataExpenderControlTemplate}"/>
    </Style>

    <DataTemplate x:Key="CateBaseDataTemplate">
        <StackPanel Orientation="Horizontal" ToolTip="{Binding cateName}">
            <TextBlock Text="{Binding cateName}" FontSize="14" Foreground="#666666" Margin="6,0,0,0"/>
        </StackPanel>
    </DataTemplate>
    
    <Style x:Key="ListViewItemDefaultStyle" TargetType="ListViewItem">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="4,2,4,2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Padding" Value="0,0,0,0"></Setter>
    </Style> 
    <Style x:Key="ListViewItemCateStyle" TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemDefaultStyle}">
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="{TemplateBinding Margin}">
                        <StackPanel VerticalAlignment="Center">
                            <TextBlock Text="{Binding cateName}" VerticalAlignment="Center" Margin="20,0,0,0" TextWrapping="Wrap" Padding="2"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="{DynamicResource myBlue}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter  Property="Opacity" Value="{StaticResource DisableOpacity}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="BaseDataListViewControlTemplate" TargetType="ListView">
        <Border x:Name="Border" Background="{TemplateBinding Background}" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    SnapsToDevicePixels="true">
            <ItemsPresenter/>
        </Border>
    </ControlTemplate>

    <Style x:Key="BaseDataListViewStyle" TargetType="ListView">
        <Setter Property="Background" Value="{DynamicResource F9}"/>
        <Setter Property="Template" Value="{StaticResource BaseDataListViewControlTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>
</ResourceDictionary>